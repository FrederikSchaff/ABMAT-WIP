	
Label Root
{
	Son: micro
	Label micro
	{
		Var: micro_1

	}

	Var: ABMAT_INIT
	Var: macro_1
	Var: ABMAT_UPDATE

}


DATA

Object: Root C	1
Var: ABMAT_INIT 0 n + n n
Var: macro_1 0 n + n p
Var: ABMAT_UPDATE 0 n + n n

Object: micro C	1
Var: micro_1 0 n + n p

SIM_NUM 1
SEED 1
MAX_STEP 100
EQUATION fun_TestABMAT.cpp
MODELREPORT report_Sim1.html

DESCRIPTION

Object_Root
(no description available)
END_DESCRIPTION

Variable_ABMAT_INIT
(no description available)
END_DESCRIPTION

Variable_macro_1
(no description available)
_INIT_

END_DESCRIPTION

Variable_ABMAT_UPDATE
(no description available)
END_DESCRIPTION

Object_micro
(no description available)
_INIT_

END_DESCRIPTION

Variable_micro_1
(no description available)
_INIT_

END_DESCRIPTION


DOCUOBSERVE

END_DOCUOBSERVE


DOCUINITIAL

END_DOCUINITIAL


EQ_FILE
//#define EIGENLIB			// uncomment to use Eigen linear algebra library
//#define NO_POINTER_INIT	// uncomment to disable pointer checking

#include "fun_head_fast.h"

// do not add Equations in this area

MODELBEGIN

// insert your equations here, between the MODELBEGIN and MODELEND words

EQUATION("macro_1")
/* A test macro variable. It will also create new micro variables if they are less then 10*/
for (i = 0; i < 10; i++){
	if (COUNT("micro")<10){
		ADDOBJ("micro");
	}
}

//and randomly a new one, too.
if (RND < .8)
	ADDOBJ("micro");
RESULT(RND)

EQUATION("micro_1")
if (RND>.95)
	DELETE(p);
RESULT(RND)










MODELEND

// do not add Equations in this area

void close_sim( void )
{
	// close simulation special commands go here
}

END_EQ_FILE
